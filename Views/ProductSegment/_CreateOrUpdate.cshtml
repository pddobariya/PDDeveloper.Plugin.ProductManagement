@model ProductSegmentModel

@inject IEventPublisher eventPublisher

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <nop-tabs id="productSegment-edit">
            <nop-tab asp-name="tab-info" asp-title="@T("Plugins.GBS.ProductManagement.Segment.Tab.Info")" asp-default="true">@await Html.PartialAsync("~/Plugins/GBS.Plugin.ProductManagement/Views/ProductSegment/_CreateOrUpdate.Info.cshtml", Model)</nop-tab>
            <nop-tab asp-name="tab-Condition" asp-title="@T("Plugins.GBS.ProductManagement.Segment.Tab.Condition")">@await Html.PartialAsync("~/Plugins/GBS.Plugin.ProductManagement/Views/ProductSegment/_CreateOrUpdate.SegmentOption.cshtml", Model)</nop-tab>
            <nop-tab asp-name="tab-Include" asp-title="@T("Plugins.GBS.ProductManagement.Segment.Tab.Include")">@await Html.PartialAsync("~/Plugins/GBS.Plugin.ProductManagement/Views/ProductSegment/_CreateOrUpdate.IncludeProduct.cshtml", Model)</nop-tab>
            <nop-tab asp-name="tab-Exclude" asp-title="@T("Plugins.GBS.ProductManagement.Segment.Tab.Exclude")">@await Html.PartialAsync("~/Plugins/GBS.Plugin.ProductManagement/Views/ProductSegment/_CreateOrUpdate.ExcludeProduct.cshtml", Model)</nop-tab>
            <nop-tab asp-name="tab-Product" asp-title="@T("Plugins.GBS.ProductManagement.Segment.Tab.Product")">@await Html.PartialAsync("~/Plugins/GBS.Plugin.ProductManagement/Views/ProductSegment/_CreateOrUpdate.Products.cshtml", Model)</nop-tab>
        </nop-tabs>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "productSegment-edit");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}