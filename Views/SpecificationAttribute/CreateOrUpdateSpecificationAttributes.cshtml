@model ProductSpecificationAttributeModel

@using Nop.Core.Domain.Catalog
@using Nop.Services

@{
    Layout = "_AdminLayout";

    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("PDDeveloper.ProductManagement");

    //page title
    ViewBag.Title = T("Admin.Catalog.Products.ProductAttributes.Attributes.Values.EditValueDetails").Text;
}


<form asp-controller="ProductSegment" asp-action="" method="post" id="productsegment-form">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Plugins.PDD.ProductManagement.Segment.SpecificationAttribute.Manage")
            <small>
                <i class="fa fa-arrow-circle-left"></i>
                <a asp-action="Edit" asp-route-id="@Model.ProductSegmentId">@T("Plugins.PDD.ProductManagement.ProductAttributes.BackToSegment")</a>
            </small>
        </h1>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <p>
                    @T("Admin.Catalog.Products.SpecificationAttributes.Hint")
                </p>
                @*hide "add spec" table if no attributes are defined*@
                @if (Model.SpecificationAttributeId > 0)
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @await Html.PartialAsync("Table", new DataTablesModel
                            {
                                Name = "specificationattributes-grid",
                                UrlRead = new DataUrl("ProductSpecAttrList", "ProductSegment", new RouteValueDictionary { [nameof(Model.SpecificationAttributeId)] = Model.SpecificationAttributeId, [nameof(Model.ProductSegmentId)] = Model.ProductSegmentId }),
                                Length = Model.ProductSpecificationAttributeSearchModel.PageSize,
                                LengthMenu = Model.ProductSpecificationAttributeSearchModel.AvailablePageSizes,
                                ColumnCollection = new List<ColumnProperty>
                                {
                                    new ColumnProperty(nameof(ProductSpecificationAttributeModel.AttributeTypeName))
                                    {
                                        Title = T("Admin.Catalog.Products.SpecificationAttributes.Fields.AttributeType").Text,
                                        Width = "150"
                                    },
                                    new ColumnProperty(nameof(ProductSpecificationAttributeModel.AttributeName))
                                    {
                                        Title = T("Admin.Catalog.Products.SpecificationAttributes.Fields.SpecificationAttribute").Text,
                                        Width = "200"
                                    },
                                    new ColumnProperty(nameof(ProductSpecificationAttributeModel.ValueRaw))
                                    {
                                        Title = T("Admin.Catalog.Products.SpecificationAttributes.Fields.Value").Text,
                                        Width = "200",
                                        Encode = false
                                    },
                                    new ColumnProperty(nameof(ProductSpecificationAttributeModel.AllowFiltering))
                                    {
                                        Title = T("Admin.Catalog.Products.SpecificationAttributes.Fields.AllowFiltering").Text,
                                        Width = "150",
                                        ClassName = NopColumnClassDefaults.CenterAll,
                                        Render = new RenderBoolean()
                                    },
                                    new ColumnProperty(nameof(ProductSpecificationAttributeModel.ShowOnProductPage))
                                    {
                                        Title = T("Admin.Catalog.Products.SpecificationAttributes.Fields.ShowOnProductPage").Text,
                                        Width = "150",
                                        ClassName = NopColumnClassDefaults.CenterAll,
                                        Render = new RenderBoolean()
                                    },
                                    new ColumnProperty(nameof(ProductSpecificationAttributeModel.DisplayOrder))
                                    {
                                        Title = T("Admin.Catalog.Products.SpecificationAttributes.Fields.DisplayOrder").Text,
                                        Width = "150",
                                        ClassName =  NopColumnClassDefaults.CenterAll
                                    },
                                    new ColumnProperty(nameof(ProductSpecificationAttributeModel.Id))
                                    {
                                        Title = T("Admin.Common.Edit").Text,
                                        Width = "100",
                                        ClassName =  NopColumnClassDefaults.Button,
                                        Render = new RenderCustom("renderColumnEditSpecification")
                                    }
                                }
                            })
                        </div>
                        <div class="panel-footer">
                            <a asp-action="ProductSpecAttributeAddOrEdit"
                               asp-route-specificationAttributeId="@Model.SpecificationAttributeId"
                               asp-route-productSegmentId="@Model.ProductSegmentId"
                               asp-route-pDD_ProductAttributeMapId="@Model.PDD_ProductAttributeMapId"
                               class="btn bg-blue">
                                <i class="fa fa-plus-square"></i>
                                @T("Admin.Catalog.Products.SpecificationAttributes.AddButton")
                            </a>
                        </div>
                    </div>
                }
                else
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @T("Admin.Catalog.Products.SpecificationAttributes.NoAttributes")
                        </div>
                    </div>
                }

            </div>
            <script>
                function renderColumnEditSpecification(data, type, row, meta) {
                    return '<a class="btn btn-default"  href="@Url.Content("~/Admin/ProductSegment/ProductSpecAttributeAddOrEdit?productSegmentId="+ Model.ProductSegmentId+ "&specificationAttributeId="+ Model.SpecificationAttributeId + "&pDD_ProductAttributeMapId=")' + row.PDD_ProductAttributeMapId + '&id=' + row.Id + '"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>';
                }
            </script>
        </div>
    </div>

</form>


